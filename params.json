{"name":"Zeropush-android-demo","tagline":"a demo project showing how to integrate with the ZeroPush API","body":"ZeroPush-Android-Demo\r\n=====================\r\n\r\nA demo project showing how to integrate with the ZeroPush API.\r\n\r\nBackground\r\n---\r\n\r\nZeroPush uses GCM's CCS(XMPP) gateway for sending push notifications. The XMPP\r\nprotocol has a number of advantages. We maintain a persistent connection to GCM\r\nso there is low overhead when making many requests.  This also allows us to\r\nperform fast broadcasts to all of your registered devices and are not\r\nlimited to 10,000. We use the same efficient connection handling model we employ\r\nwhen sending push notifications through the APNS gateway.\r\n\r\nPrerequisites\r\n---\r\n\r\nGet a Project Number and API Key from Google Developers Console. Follow these\r\n[instructions](http://developer.android.com/google/gcm/gs.html).\r\n\r\nSetup\r\n---\r\n\r\n1. Create an Android app on the ZeroPush site.\r\n\r\n1. Include the `zeropush-sdk` module in your project. In Android Studio:\r\n  *File -> Import Module...*. When you reference the module, Android Studio should\r\n  offer to add the dependency.\r\n\r\n1. Call setup method in main activity.\r\n  ```java\r\n  private ZeroPush zeroPush;\r\n\r\n  @Override\r\n  protected void onCreate(Bundle savedInstanceState) {\r\n      super.onCreate(savedInstanceState);\r\n      setContentView(R.layout.activity_notifications);\r\n      zeroPush = new ZeroPush(\"zeropush-app-token\", \"gcm-project-number\", this);\r\n      zeroPush.registerForRemoteNotifications();\r\n  }\r\n  ```\r\n\r\n  You will probably want to register again in the `onResume` method as\r\n  well. This ensures that if the user returns to the running app through some other\r\n  means, such as through the back button, the registration is still performed.\r\n\r\n1. Add a receiver to handle the received push notifications and subclass ZeroPushBroadcastReceiver:\r\n  ```java\r\n  public class IntentReceiver extends ZeroPushBroadcastReceiver {\r\n    @Override\r\n    public void onPushReceived(Context context, Intent intent, Bundle extras) {\r\n        Log.d(\"PushReceived\", extras.toString());\r\n    }\r\n  }\r\n  ```\r\n\r\n\r\n1. Add permissions to `AndroidManifest.xml`. Now that we have a class to act\r\n   as the receiver, we need to configure it inside of `<application>`. Add the following declarations:\r\n  ```xml\r\n  <application>\r\n    ...\r\n    <meta-data android:name=\"com.google.android.gms.version\" android:value=\"@integer/google_play_services_version\" />\r\n    <receiver\r\n        android:name=\".IntentReceiver\"\r\n        android:permission=\"com.google.android.c2dm.permission.SEND\" >\r\n        <intent-filter>\r\n            <action android:name=\"com.google.android.c2dm.intent.RECEIVE\" />\r\n            <action android:name=\"com.google.android.c2dm.intent.REGISTRATION\" />\r\n            <category android:name=\"com.zeropush.zeropush_gcm_demo\" />\r\n        </intent-filter>\r\n    </receiver>\r\n    \r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.GET_ACCOUNTS\" />\r\n    <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\r\n    <uses-permission android:name=\"com.google.android.c2dm.permission.RECEIVE\" />\r\n\r\n    <permission android:name=\"com.zeropush.zeropush_gcm_demo.permission.C2D_MESSAGE\"\r\n        android:protectionLevel=\"signature\" />\r\n    <uses-permission android:name=\"com.zeropush.zeropush_gcm_demo.permission.C2D_MESSAGE\" />\r\n  </application>\r\n  ```\r\n  Remember to replace `com.zeropush.zeropush_gcm_demo` with the package of your app.\r\n\r\nHandle a Push Notification\r\n---\r\n\r\n1. Create a simple notification to display\r\n  ```java\r\n  public class IntentReceiver extends ZeroPushBroadcastReceiver {\r\n      @Override\r\n      public void onPushReceived(Context context, Intent intent, Bundle extras) {\r\n\r\n          NotificationManager manager = (NotificationManager)context.getSystemService(Context.NOTIFICATION_SERVICE);\r\n          PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, new Intent(context, YourMainActivity.class), 0);\r\n\r\n          Notification notification = new Notification.Builder(context)\r\n                  .setContentTitle(\"Got it!\")\r\n                  .setContentText(extras.toString())\r\n                  .setSmallIcon(R.drawable.ic_launcher)\r\n                  .setContentIntent(pendingIntent)\r\n                  .build();\r\n\r\n          manager.notify(1, notification);\r\n      }\r\n  }\r\n\r\n  ```\r\n\r\n\r\nSend a broadcast\r\n---\r\n\r\nWe support all of the CCS parameters documented here: https://developer.android.com/google/gcm/server.html#params\r\n\r\n```shell\r\ncurl https://api.zeropush.com/broadcast \\\r\n  -d auth_token=auth_token \\\r\n  -d data[alert]=hello \\\r\n  -d data[title]=Test \\\r\n  -d collapse_key=friend_request \\\r\n  -d delay_while_idle=false \\\r\n  -d time_to_live=40320 \\\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}